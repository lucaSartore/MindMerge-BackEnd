{
  "openapi": "3.0.0",
  "info": {
    "title": "Mind Merge API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/user/{userId}": {
      "get": {
        "summary": "Get an user starting from an id",
        "description": "Get a user starting from an id"
      },
      "parameters": [
        {
          "name": "userId",
          "description": "The id of the user to get",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully returns the user",
          "content": {
            "application/json": {
              "schema": {
                "type": "User"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "/api/v1/user/{userId}/name": {
      "get": {
        "summary": "Get an user's name starting from an id",
        "description": "Get an user's name starting from an id"
      },
      "parameters": [
        {
          "name": "userId",
          "description": "The id of the user to get",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully returns the user",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "/api/v1/organization/{organization_id}/users": {
      "get": {
        "summary": "Get all the users ids and names in an organization",
        "description": "Get all the users ids and names in an organization"
      },
      "parameters": [
        {
          "name": "organization_id",
          "description": "The id of the organization",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "user_id",
          "description": "The id of the user to add",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully removes the user from the organization",
          "content": {
            "application/json": {
              "schema": {
                "type": {
                  "id": "number",
                  "name": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal server error"
        }
      },
      "delete": {
        "summary": "Remove an user from an organization",
        "description": "Remove the user with the given id from the organization with the given id"
      }
    },
    "/api/v1/organization/{organization_id}/user/{user_id}": {
      "post": {
        "summary": "Add an user to an organization",
        "description": "Add the user with the given id to the organization with the given id"
      },
      "parameters": [
        {
          "name": "organization_id",
          "description": "The id of the organization",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "user_id",
          "description": "The id of the user to add",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully returns the users ids and names list",
          "content": {
            "application/json": {
              "schema": {
                "type": {
                  "id": "number",
                  "name": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "/api/v1/organization/{organization_id}": {
      "get": {
        "summary": "Get an organization",
        "description": "Get an organization with the given id"
      },
      "parameters": [
        {
          "name": "organization_id",
          "description": "The id of the organization",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully returns the organization",
          "content": {
            "application/json": {
              "schema": {
                "type": "Organization"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "components": {},
  "tags": []
}
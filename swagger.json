{
  "openapi": "3.0.0",
  "info": {
    "title": "Mind Merge API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "APIs for managing users"
    },
    {
      "name": "Account",
      "description": "APIs to manage account and login"
    },
    {
      "name": "Organizations",
      "description": "APIs for managing organizations"
    },
    {
      "name": "Tasks",
      "description": "APIs for managing tasks"
    },
    {
      "name": "Reports",
      "description": "APIs for managing reports"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "The id of the user"
          },
          "userName": {
            "type": "string",
            "description": "The name of the user"
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The ids of the organizations that the user is in"
          },
          "userKind": {
            "type": "integer",
            "description": "The kind of the user (Custom, Google, Facebook)"
          },
          "email": {
            "type": "string",
            "description": "The email of the user"
          }
        },
        "required": [
          "userId",
          "userName",
          "organizations",
          "userKind",
          "email"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "description": "The id of the task"
          },
          "taskFatherId": {
            "type": "integer",
            "nullable": true,
            "description": "The id of the father task"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the task was last updated"
          },
          "taskName": {
            "type": "string",
            "description": "The name of the task"
          },
          "taskDescription": {
            "type": "string",
            "description": "The description of the task"
          },
          "taskStatus": {
            "type": "integer",
            "description": "The status of the task"
          },
          "taskNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskNote"
            },
            "description": "The notes of the task"
          },
          "taskAssignees": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "A list containing the ids of the assignees for the current task"
          },
          "taskManager": {
            "type": "integer",
            "description": "The id of the manager"
          },
          "taskOrganizationId": {
            "type": "integer",
            "description": "The id of the organization"
          },
          "taskReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskReportSchedule"
            },
            "description": "The reports of the task"
          },
          "notificationEnable": {
            "type": "boolean",
            "description": "Whether to send notification to the manager when the status of the task changes or not"
          },
          "childTasks": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The ids of the child tasks"
          },
          "recusivePermissionsValue": {
            "type": "integer",
            "description": "How far down the task tree the permissions of the task are inherited"
          }
        },
        "required": [
          "taskId",
          "taskName",
          "taskDescription",
          "taskStatus",
          "taskAssignees",
          "taskManager",
          "taskOrganizationId",
          "taskNotes",
          "taskReports",
          "notificationEnable",
          "childTasks",
          "recusivePermissionsValue"
        ]
      },
      "TaskReportSchedule": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "description": "The id of the task"
          },
          "reportScheduleId": {
            "type": "integer",
            "description": "The id of the report schedule"
          },
          "reportType": {
            "type": "integer",
            "description": "The type of the report"
          },
          "reportFrequency": {
            "type": "integer",
            "description": "The frequency of the report"
          },
          "nextReportDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the report begins"
          },
          "reportPrompt": {
            "type": "string",
            "description": "The prompt/question for the report"
          }
        },
        "required": [
          "taskId",
          "reportScheduleId",
          "reportType",
          "reportFrequency",
          "nextReportDate",
          "reportPrompt"
        ]
      },
      "TaskNote": {
        "type": "object",
        "properties": {
          "noteId": {
            "type": "integer",
            "description": "The id of the note"
          },
          "taskId": {
            "type": "integer",
            "description": "The id of the task the notes are for"
          },
          "notes": {
            "type": "string",
            "description": "The note itself"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the note was last edited"
          }
        },
        "required": [
          "noteId",
          "taskId",
          "notes",
          "date"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "description": "The id of the organization"
          },
          "organizationName": {
            "type": "string",
            "description": "The name of the organization"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The ids of the users in the organization"
          },
          "licenseValid": {
            "type": "boolean",
            "description": "If the license of the organization is valid"
          },
          "licenseExpirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the license expires"
          },
          "ownerId": {
            "type": "integer",
            "description": "The id of the owner of the organization"
          }
        },
        "required": [
          "organizationId",
          "organizationName",
          "userIds",
          "licenseValid",
          "licenseExpirationDate",
          "ownerId"
        ]
      },
      "TaskTree": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "description": "The id of the task"
          },
          "childTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTree"
            },
            "default": [],
            "description": "The child tasks of the task"
          },
          "taskName": {
            "type": "string",
            "description": "The name of the task"
          }
        },
        "required": [
          "taskId",
          "childTasks",
          "taskName"
        ]
      }
    }
  },
  "paths": {
    "/api/v1/account/oauth_info": {
      "get": {
        "summary": "Informations client needs to log in with google",
        "description": "Return the informations (in particular the url) that the client needs to log in with google",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "Successfully returns oauth informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "redirectUrl": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/account/google/callback": {
      "get": {
        "summary": "Callback for google oauth",
        "description": "After a sign up or login with google, the user is redirected to this endpoint, so that the server can generate a token for the user",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "The code returned by google after the user logs in",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "304": {
            "description": "Redirect to the frontend with a valid token"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/id": {
      "get": {
        "summary": "Return user ID",
        "description": "Get an user's ID starting from the unique name",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "name",
            "description": "The name of the user to get",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the id of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/{userId}": {
      "get": {
        "summary": "return the details of an user starting from an id",
        "description": "return the details of an user starting from an id. This API is protected, by the token, therefore only the user with the same id can see the details",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "The id of the user to get",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/{userId}/name": {
      "get": {
        "summary": "Get an user's name starting from an id",
        "description": "Get an user's name starting from an id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "The id of the user to get",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the user's name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/organization/{organization_id}/users": {
      "get": {
        "summary": "Get all the users ids and names in an organization",
        "description": "Get all the users ids and names in an organization",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the users ids and names list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/organization/{organization_id}/user/{user_id}": {
      "post": {
        "summary": "Add an user to an organization",
        "description": "Add the user with the given id to the organization with the given id",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "description": "The id of the user to add",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully adds the user to the organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Remove an user from an organization",
        "description": "Remove the user with the given id from the organization with the given id",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "description": "The id of the user to remove",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removes the user from the organization"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/organization/{organization_id}": {
      "get": {
        "summary": "Get an organization",
        "description": "Get an organization with the given id",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "object",
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/organization/": {
      "post": {
        "summary": "Create an organization",
        "description": "Create an organization with the given data",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "name": "organization",
          "description": "The organization data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully creates the organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/organization/{organization_id}/name": {
      "get": {
        "summary": "Get the name of an organization",
        "description": "Get the name of the organization with the given id",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the organization name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/report/automatic": {
      "post": {
        "summary": "Generate automatic report",
        "description": "Generate automatic report for task, organization and user with the given prompt",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "description": "The id of the user",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "name": "Prompt",
          "description": "The prompt for the report",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully creates the task note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/task_tree": {
      "get": {
        "summary": "Get all tasks for a user and organization",
        "description": "Get all tasks for a user with given id and organization with given id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "user_id",
            "description": "The id of the user",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the task tree",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/TaskTree"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}": {
      "get": {
        "summary": "Get a task",
        "description": "Get a task with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the Task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "object",
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete a task with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removes the task"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/name/{new_name}": {
      "put": {
        "summary": "Update a task name",
        "description": "Update a task name with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "new_name",
            "description": "The new name of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updates the task name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/notes/{notes_id}": {
      "put": {
        "summary": "Update a task note",
        "description": "Update a task note with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "description": "The new notes for the task",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notes_id",
            "description": "The id of the note",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updates the task notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/": {
      "post": {
        "summary": "Create a new task",
        "description": "Create a new task with given data",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "name": "Task",
          "description": "The Task data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully creates the task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/notes/": {
      "post": {
        "summary": "Create a new task note",
        "description": "Create a new task note with given data",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "name": "Task",
          "description": "The Task data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully creates the task note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/notes/{note_id}": {
      "delete": {
        "summary": "Delete a task note",
        "description": "Delete a task note with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "note_id",
            "description": "The id of the note",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removes the task note"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/assignee/{assignee_id}": {
      "post": {
        "summary": "Assign a new user to a task",
        "description": "Assign a new user with given id to a task with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assignee_id",
            "description": "The id of the assignee",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully assigns the user to the task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Remove a user from a task",
        "description": "Remove a user with given id from a task with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assignee_id",
            "description": "The id of the assignee",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removes the user from the task"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/status/{new_status}": {
      "put": {
        "summary": "Update a task status",
        "description": "Update a task status with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "new_status",
            "description": "The new status of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updates the task status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/task/{task_id}/description": {
      "put": {
        "summary": "Update a task description",
        "description": "Update a task description with given id and valid organization id",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task_id",
            "description": "The id of the task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organization_id",
            "description": "The id of the organization",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Token",
            "description": "The jwt (json web token) of the user",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the new description for the task",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updates the task description",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}